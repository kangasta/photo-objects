name: CI
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
        - "3.10"
        - "3.11"
        - "3.12"
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -r test-requirements.txt
    - name: Run pycodestyle
      run: |
        pycodestyle --exclude back/api/settings.py,*/migrations/*.py back photo_objects
    - name: Run pylint
      run: |
        pylint -E --enable=invalid-name,unused-import,useless-object-inheritance back/api photo_objects
    - name: Run tests
      run: |
        docker compose up -d db objsto

        until docker compose logs db | grep "listening on .* address" -q; do
          sleep 5;
        done


        export PYTHONPATH=$PYTHONPATH:back/
        export DJANGO_SETTINGS_MODULE=api.settings
        django-admin makemigrations --check photo_objects

        coverage run --branch --source photo_objects runtests.py
        coverage report -m
    # - name: Push coverage
    #   uses: paambaati/codeclimate-action@v2.7.5
    #   with:
    #     coverageCommand: coverage xml
    #     coverageLocations: |
    #       ${{github.workspace}}/coverage.xml:coverage.py
    #   env:
    #     CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_TOKEN }}
    #   if: matrix.python-version == '3.10' && github.ref == 'refs/heads/main'
  e2e:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run end-to-end tests
      run: |
        docker compose -f docker-compose.test.yaml up --exit-code-from test
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
